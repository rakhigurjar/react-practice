{"ast":null,"code":"import _slicedToArray from\"/home/mobcoder/Desktop/React/react-practice/food-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import classes from'./Checkout.module.css';import{useRef,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isEmpty=function isEmpty(value){return value.trim()==='';};var isFiveChars=function isFiveChars(value){return value.trim().length===5;};var Checkout=function Checkout(props){var _useState=useState({name:true,city:true,street:true,postalCode:true}),_useState2=_slicedToArray(_useState,2),formInputValidity=_useState2[0],setFormInputValidity=_useState2[1];var nameInputRef=useRef();var cityInputRef=useRef();var streetInputRef=useRef();var postalCodeInputRef=useRef();var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredStreet=streetInputRef.current.value;var enteredPostalCode=postalCodeInputRef.current.value;var enteredCity=cityInputRef.current.value;var enteredNameIsValid=!isEmpty(enteredName);var enteredCityIsValid=!isEmpty(enteredCity);var enteredStreetIsValid=!isEmpty(enteredStreet);var enteredPostalCodeIsValid=isFiveChars(enteredPostalCode);setFormInputValidity({name:enteredNameIsValid,street:enteredStreetIsValid,city:enteredCityIsValid,postalCode:enteredPostalCodeIsValid});var formIsValid=enteredNameIsValid&&enteredStreetIsValid&&enteredPostalCodeIsValid&&enteredCityIsValid;if(!formIsValid){return;}props.onConfirm({name:enteredName,city:enteredCity,street:enteredStreet,postalCode:enteredPostalCode});};var nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.name?'':classes.invalid);var cityControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.city?'':classes.invalid);var streetControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.street?'':classes.invalid);var postalCodeControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.postalCode?'':classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid name!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:streetControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInputRef}),!formInputValidity.street&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid street!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:postalCodeControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postal\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postal\",ref:postalCodeInputRef}),!formInputValidity.postalCode&&/*#__PURE__*/_jsx(\"p\",{children:\" Please enter a valid postal code!(5 characters long)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:cityControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInputRef}),!formInputValidity.city&&/*#__PURE__*/_jsx(\"p\",{children:\" Please enter a valid city!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"names":["classes","useRef","useState","jsx","_jsx","jsxs","_jsxs","isEmpty","value","trim","isFiveChars","length","Checkout","props","_useState","name","city","street","postalCode","_useState2","_slicedToArray","formInputValidity","setFormInputValidity","nameInputRef","cityInputRef","streetInputRef","postalCodeInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredCityIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","nameControlClasses","concat","control","invalid","cityControlClasses","streetControlClasses","postalCodeControlClasses","className","form","onSubmit","children","htmlFor","type","id","ref","actions","onClick","onCancel","submit"],"sources":["/home/mobcoder/Desktop/React/react-practice/food-web/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\n\nconst isEmpty = value => value.trim() === '' ;\nconst isFiveChars = value => value.trim().length === 5;\n\n\nconst Checkout = (props) => {\nconst[formInputValidity, setFormInputValidity] = useState({\n  name:true,\n  city:true,\n  street: true,\n  postalCode: true,\n});\n\n  const nameInputRef       = useRef();\n  const cityInputRef       = useRef();\n  const streetInputRef     = useRef();\n  const postalCodeInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    \n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    \n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    \n    const formIsValid = enteredNameIsValid && enteredStreetIsValid &&  enteredPostalCodeIsValid &&  enteredCityIsValid;\n\n    if(!formIsValid){\n      return;\n    }\n\n    props.onConfirm({\n      name:enteredName,\n      city: enteredCity,\n      street: enteredStreet,\n      postalCode: enteredPostalCode,\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputValidity.city ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputValidity.street ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputValidity.postalCode ? '' : classes.invalid}`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameInputRef} />\n      {!formInputValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div className={streetControlClasses}>\n      <label htmlFor='street'>Street</label>\n        <input type='text' id='street' ref={streetInputRef} />\n      {!formInputValidity.street && <p>Please enter a valid street!</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalCodeInputRef}/>\n      {!formInputValidity.postalCode && <p> Please enter a valid postal code!(5 characters long)</p>}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef}/>\n     {!formInputValidity.city && <p> Please enter a valid city!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}