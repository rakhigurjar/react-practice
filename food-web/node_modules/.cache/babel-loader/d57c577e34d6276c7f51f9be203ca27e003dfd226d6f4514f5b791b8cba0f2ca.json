{"ast":null,"code":"var _jsxFileName = \"/home/mobcoder/Desktop/React/react-practice/food-web/src/components/Cart/Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === '';\nconst isFiveChars = value => value.trim().length === 5;\nconst Checkout = props => {\n  _s();\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    postalCode: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    setFormInputValidity({\n      name: enteredCityIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalCodeIsValid && enteredCityIsValid;\n    if (formIsValid) {\n      return;\n    }\n    // submit cart data \n  };\n\n  const nameControlClasses = `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputValidity.street ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputValidity.postalCode ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputValidity.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formInputValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter a valid postal code!(5 characters long)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"L7NOIgf/ep5katipp5QVmznDtDg=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","jsxDEV","_jsxDEV","isEmpty","value","trim","isFiveChars","length","Checkout","props","_s","formInputValidity","setFormInputValidity","name","street","postalCode","city","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredCityIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","formIsValid","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","className","form","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["/home/mobcoder/Desktop/React/react-practice/food-web/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\n\nconst isEmpty = value => value.trim() === '' ;\nconst isFiveChars = value => value.trim().length === 5;\n\n\nconst Checkout = (props) => {\nconst[formInputValidity, setFormInputValidity] = useState({\n  name:true,\n  street: true,\n  postalCode: true,\n  city:true\n});\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    \n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    \n    setFormInputValidity({\n      name: enteredCityIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    \n    const formIsValid = \n    enteredNameIsValid && \n    enteredStreetIsValid && \n    enteredPostalCodeIsValid && \n    enteredCityIsValid;\n\n    if(formIsValid){\n      return;\n    }\n    // submit cart data \n  };\nconst nameControlClasses = `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`;\nconst streetControlClasses = `${classes.control} ${formInputValidity.street ? '' : classes.invalid}`;\nconst postalCodeControlClasses = `${classes.control} ${formInputValidity.postalCode ? '' : classes.invalid}`;\nconst cityControlClasses = `${classes.control} ${formInputValidity.city ? '' : classes.invalid}`;\nreturn (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameInputRef} />\n      {!formInputValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div className={streetControlClasses}>\n      <label htmlFor='street'>Street</label>\n        <input type='text' id='street' ref={streetInputRef} />\n      {!formInputValidity.street && <p>Please enter a valid street!</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalCodeInputRef}/>\n      {!formInputValidity.postalCode && <p> Please enter a valid postal code!(5 characters long)</p>}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef}/>\n     {!formInputValidity.city && <p> Please enter a valid city!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}